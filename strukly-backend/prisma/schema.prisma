// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  email          String   @unique
  name           String
  hashedPassword String // hashed password
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  transactions TransactionHeader[]
}

model TransactionHeader {
  id             String   @id @default(uuid())
  dateTime       DateTime
  vendorName     String
  category       String
  subtotalAmount Float
  taxAmount      Float
  discountAmount Float
  serviceAmount  Float
  totalAmount    Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userID String
  user   User   @relation(fields: [userID], references: [id])

  walletID String

  items TransactionItem[]
}

model TransactionItem {
  id          String @id @default(uuid())
  name        String
  quantity    Int
  singlePrice Float
  totalPrice  Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  transactionID String
  transaction   TransactionHeader @relation(fields: [transactionID], references: [id])
}

model Wallet {
  id                 String   @id @default(uuid())
  userID             String   @db.Uuid
  name               String
  transaction_method String   @default("cash")
  balance            Decimal  @default(0) @db.Decimal(15, 2)
  balanceCurrency    String   @default("idr")
  createdAt          DateTime @default(now())
  updatedAt          DateTime @default(now()) @db.Timestamp(6)
}
